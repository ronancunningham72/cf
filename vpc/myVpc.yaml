AWSTemplateFormatVersion: '2010-09-09'
Resources:
  myMainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
      - Key: Name
        Value: MyMainVPC
  myInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value: MyMainVPCinternetGateway
        
  attachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      InternetGatewayId: !Ref myInternetGateway
      VpcId: !Ref myMainVPC
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: 
        Ref: "myMainVPC"
  myMainVPCInternalRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myMainVPC
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - Ref: "myMainVPC"
              - 'Internal'
  myMainVPCExternalRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myMainVPC
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - Ref: "myMainVPC"
              - 'External'
  myPivateSubnetA: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: 
        !Ref myMainVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - 'prv'
              - 
               Fn::Select: 
                 - 0 
                 - Fn::GetAZs: ""
              - 
               Ref: "myMainVPC"
  myPrivateSubnetB: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: 
        !Ref myMainVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - 'prv'
              - 
               Fn::Select: 
                 - 1
                 - Fn::GetAZs: ""
              - 
               Ref: "myMainVPC"
  myPublicSubnetA: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: 
        !Ref myMainVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - 'pub'
              - 
               Fn::Select: 
                 - 0 
                 - Fn::GetAZs: ""
              - 
               Ref: "myMainVPC"
  myPublicSubnetB: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: 
        !Ref myMainVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - 'pub'
              - 
               Fn::Select: 
                 - 1
                 - Fn::GetAZs: ""
              - 
               Ref: "myMainVPC"
  mainVPCNatGateway:
    DependsOn: myPublicSubnetA
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
      SubnetId:
        Ref: myPublicSubnetA
      Tags:
      - Key: Name
        Value:
          Fn::Join: 
            - "-"
            - - 'NAT'
              - 
               Ref: "myMainVPC"
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: myMainVPCInternalRouteTable 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: mainVPCNatGateway 